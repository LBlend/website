---
export const prerender = false;

import { SITE_TITLE, SITE_DESCRIPTION } from "src/consts";
import { getCollection } from "astro:content";

import readingTime from "reading-time";

import BaseHead from "@components/BaseHead.astro";
import Header from "@sections/Header.astro";
import Footer from "@sections/Footer.astro";
import FormattedDate from "@elements/FormattedDate.astro";
import RssSubscribe from "@components/elements/RssSubscribe.astro";

const tags = Astro.url.searchParams.get("tags")?.split(",") || [];

const posts = (await getCollection("blog")).sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
const filteredPosts =
  tags.length > 0
    ? posts.filter((post) => Array.isArray(post.data.tags) && post.data.tags.some((tag) => tags.includes(tag)))
    : posts;
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>
  <body>
    <Header />
    <main class="flex flex-col items-center justify-center gap-16 px-2">
      <h1 class="text-4xl font-bold">Blog</h1>
      <RssSubscribe />

      <section class="flex max-w-4xl flex-col items-center justify-around gap-12">
        {
          filteredPosts.map((post) => (
            <article class="flex w-full flex-col">
              <p class="text-accent text-sm">{readingTime(post.body ?? "").text}</p>
              <a href={`/blog/${post.id}/`}>
                <h2 class="text-2xl font-bold">{post.data.title}</h2>
              </a>
              <p class="pt-2 text-sm">
                <FormattedDate date={post.data.pubDate} />
              </p>
            </article>
          ))
        }
      </section>
    </main>
    <Footer />
  </body>
</html>
