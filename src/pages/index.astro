---
import ArrowDown from "@elements/ArrowDown.astro";
import BaseHead from "@components/BaseHead.astro";
import BlogList from "@sections/BlogList.astro";
import Footer from "@sections/Footer.astro";
import Header from "@sections/Header.astro";
import Hero from "@sections/Hero.astro";
import Intro from "@sections/Intro.astro";
import Microblog from "@sections/Microblog.astro";
import Stats from "@sections/Stats.astro";
import RecentlyLikedMedia from "@components/sections/RecentlyLikedMedia.astro";
import RecentlyLikedSongs from "@sections/RecentlyLikedSongs.astro";
import VisitedPlaces from "@sections/VisitedPlaces.astro";

import { SITE_TITLE, SITE_DESCRIPTION } from "src/consts";
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>
  <body class="flex flex-col gap-2">
    <div class="grid min-h-dvh grid-rows-[auto_1fr]">
      <Header />
      <Hero />
      <ArrowDown />
    </div>
    <div id="main" class="grid grid-cols-3 gap-8 px-2 pt-8 lg:auto-rows-fr">
      <main class="col-span-3 flex flex-col flex-wrap gap-18 lg:col-span-2">
        <Intro />
        <BlogList />
        <VisitedPlaces />
        <Microblog />
        <RecentlyLikedMedia />
      </main>
      <aside
        class="inner-scrollbar bg-backgroundlight col-span-3 mt-18 mb-18 flex max-h-dvh flex-col flex-wrap gap-6 overflow-y-auto rounded-2xl shadow-lg/40 lg:col-span-1 lg:mt-0 lg:mb-0"
      >
        <RecentlyLikedSongs />
      </aside>
    </div>
    <section class="col-span-3 mt-18 flex flex-wrap justify-center gap-6">
      <Stats />
    </section>
    <Footer />
  </body>
</html>

<script>
  // set max height of recently liked songs section to same height as main section
  // this is probably possible using CSS but I couldn't figure it out
  // major skill issue
  const mainSection = document.querySelector("main");
  const recentlyLikedSongsSection = document.querySelector("aside");

  function updateRecentlyLikedSongsHeight() {
    if (mainSection && recentlyLikedSongsSection) {
      // check if mobile view
      if (window.innerWidth > 1024) {
        recentlyLikedSongsSection.style.maxHeight = `${mainSection.clientHeight}px`;
      } else {
        recentlyLikedSongsSection.style.maxHeight = `${window.innerHeight}px`;
      }
    }
  }

  // Initial height update
  updateRecentlyLikedSongsHeight();

  // Add resize event listener
  window.addEventListener("resize", updateRecentlyLikedSongsHeight);

  // Clean up event listener when component is destroyed
  document.addEventListener("astro:before-swap", () => {
    window.removeEventListener("resize", updateRecentlyLikedSongsHeight);
  });
</script>
